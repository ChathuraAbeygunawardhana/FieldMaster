"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _row = _interopRequireDefault(require("antd/es/row"));

var _col = _interopRequireDefault(require("antd/es/col"));

var _button = _interopRequireDefault(require("antd/es/button"));

var _icon = _interopRequireDefault(require("antd/es/icon"));

var _SearchFormItem = _interopRequireDefault(require("./SearchFormItem"));

var _context = _interopRequireDefault(require("./context"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var SearchForm =
/*#__PURE__*/
function (_React$Component) {
  _inherits(SearchForm, _React$Component);

  function SearchForm(props) {
    var _this;

    _classCallCheck(this, SearchForm);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchForm).call(this, props));
    _this.state = {
      expand: false
    };
    _this.renderSubmitButton = _this.renderSubmitButton.bind(_assertThisInitialized(_this));
    _this.onExpand = _this.onExpand.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(SearchForm, [{
    key: "onExpand",
    value: function onExpand() {
      this.setState(function (prevState) {
        return {
          expand: !prevState.expand
        };
      });
    }
  }, {
    key: "renderSubmitButton",
    value: function renderSubmitButton(wrap, needExpand) {
      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          cols = _this$props.cols,
          searchText = _this$props.searchText,
          resetText = _this$props.resetText,
          onSearch = _this$props.onSearch,
          onReset = _this$props.onReset;
      var expand = this.state.expand;
      var node = [React.createElement(_button["default"], {
        type: "primary",
        onClick: onSearch,
        key: "search"
      }, searchText), React.createElement(_button["default"], {
        className: "".concat(prefixCls, "-clear"),
        onClick: onReset,
        key: "clear"
      }, resetText), needExpand && React.createElement("a", {
        key: "expand",
        className: "".concat(prefixCls, "-expand"),
        onClick: this.onExpand
      }, expand ? '收起' : '展开', React.createElement(_icon["default"], {
        type: expand ? 'up' : 'down'
      }))];

      if (wrap) {
        var wrapStyle = {
          overflow: 'hidden'
        };
        var style = {
          marginBottom: 24,
          "float": 'right'
        };
        node = React.createElement("div", {
          style: wrapStyle
        }, React.createElement(_row["default"], {
          style: style
        }, node));
      } else {
        node = React.createElement(_col["default"], {
          span: 24 / cols,
          className: "".concat(prefixCls, "-action")
        }, node);
      }

      return node;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          prefixCls = _this$props2.prefixCls,
          className = _this$props2.className,
          style = _this$props2.style,
          cols = _this$props2.cols,
          children = _this$props2.children;
      var expand = this.state.expand;
      var wrap = false;
      var needExpand = false;
      var totalCols = 0;
      var filterChildren = React.Children.map(children, function (child, index) {
        totalCols += Number(child.props.col);
        wrap = totalCols >= cols;
        needExpand = totalCols > cols;

        if (totalCols <= cols) {
          return React.cloneElement(child, {
            key: index
          });
        }
      });
      filterChildren = expand ? children : filterChildren;
      return React.createElement(_context["default"].Provider, {
        value: {
          prefixCls: prefixCls,
          cols: cols
        }
      }, React.createElement("form", {
        className: (0, _classnames["default"])(prefixCls, className),
        style: style
      }, React.createElement(_row["default"], {
        gutter: 24
      }, filterChildren, !wrap && filterChildren && this.renderSubmitButton(wrap)), wrap && this.renderSubmitButton(wrap, needExpand)));
    }
  }]);

  return SearchForm;
}(React.Component);

exports["default"] = SearchForm;
SearchForm.defaultProps = {
  prefixCls: 'mambar-search-form',
  cols: 4,
  searchText: '查询',
  resetText: '重置'
};
SearchForm.Item = _SearchFormItem["default"];
//# sourceMappingURL=index.js.map
