import * as React from 'react';
import { ImgViewerProps } from '../img-viewer';
export interface ImgProps {
    alt?: string;
    className?: string;
    emptyImageSrc?: string;
    emptyText?: string;
    errorImageSrc?: string;
    errorText?: string;
    onClick?: Function;
    prefixCls?: string;
    src?: string;
    style?: React.CSSProperties;
    thumb?: boolean | ThumbProps;
    title?: string;
}
export interface ThumbProps {
    allowView?: boolean;
    backgroundColor?: string;
    viewer?: ImgViewerProps;
}
export interface ImgState {
    hasClickEvent: boolean;
    showErrorImage: boolean;
    showErrorTips: boolean;
    src?: string;
    viewerVisible: boolean;
}
export interface ConfigOptions {
    emptyImageSrc?: string;
    errorImageSrc?: string;
    emptyText?: string;
    errorText?: string;
}
declare function setImageConfig(options: ConfigOptions): void;
export default class Img extends React.Component<ImgProps, ImgState> {
    static defaultProps: {
        prefixCls: string;
        thumb: boolean;
    };
    static config: typeof setImageConfig;
    private emptyImageSrc;
    private errorImageSrc;
    private hasErrorImageEorror;
    private hasThumb;
    constructor(props: ImgProps);
    componentDidUpdate(prevProps: ImgProps): void;
    onError(): void;
    onImgClick(): void;
    onViewerClose(): void;
    renderImageViewer({ allowView, viewer, }: {
        allowView: boolean;
        viewer: ImgViewerProps | undefined;
    }): JSX.Element | null;
    renderImgNode(): JSX.Element;
    render(): JSX.Element;
}
export {};
