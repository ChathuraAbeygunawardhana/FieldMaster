import * as React from 'react';
import * as PropTypes from 'prop-types';
import Viewer from 'viewerjs';
export declare enum Mode {
    VIEWER = "viewer",
    GALLERY = "gallery"
}
export interface PhotoItem {
    id: string;
    name: string;
}
export interface ImgViewerProps {
    index?: number;
    onIndexChange?: (index: number) => void;
    onClose?: Function;
    options?: Viewer.Options;
    photo: PhotoItem | PhotoItem[];
    visible?: boolean;
}
export default class ImgViewer extends React.Component<ImgViewerProps, any> {
    static propTypes: {
        index: PropTypes.Requireable<number>;
        options: PropTypes.Requireable<object>;
        photo: PropTypes.Requireable<object>;
        visible: PropTypes.Requireable<boolean>;
    };
    private container?;
    private viewer?;
    private options;
    componentDidMount(): void;
    componentWillUpdate(nextProps: ImgViewerProps): void;
    view(props: ImgViewerProps): void;
    render(): null;
    componentWillUnmount(): void;
}
