"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.Mode = void 0;

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _viewerjs = _interopRequireDefault(require("viewerjs"));

var _cloneDeep = _interopRequireDefault(require("lodash/cloneDeep"));

var _isArray = _interopRequireDefault(require("lodash/isArray"));

var _isEmpty = _interopRequireDefault(require("lodash/isEmpty"));

var _isEqual = _interopRequireDefault(require("lodash/isEqual"));

var _isFunction = _interopRequireDefault(require("lodash/isFunction"));

var _isObject = _interopRequireDefault(require("../_utils/isObject"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Mode;
exports.Mode = Mode;

(function (Mode) {
  Mode["VIEWER"] = "viewer";
  Mode["GALLERY"] = "gallery";
})(Mode || (exports.Mode = Mode = {}));

function checkMode(x) {
  var mode = '';

  if ((0, _isObject["default"])(x) && !(0, _isEmpty["default"])(x)) {
    mode = Mode.VIEWER;
  }

  if ((0, _isArray["default"])(x)) {
    var len = x.length;
    mode = len == 0 ? '' : len == 1 ? Mode.VIEWER : Mode.GALLERY;
  }

  return mode;
} // 类型检测


var ImgViewerPropTypes = {
  index: PropTypes.number,
  options: PropTypes.object,
  photo: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
  visible: PropTypes.bool
};

var ImgViewer =
/*#__PURE__*/
function (_React$Component) {
  _inherits(ImgViewer, _React$Component);

  function ImgViewer() {
    var _this;

    _classCallCheck(this, ImgViewer);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImgViewer).apply(this, arguments));
    _this.options = Object.assign({
      button: true,
      navbar: false,
      title: true,
      toolbar: true,
      tooltip: true,
      movable: true,
      zoomable: true,
      rotatable: true,
      scalable: true,
      transition: true
    }, _this.props.options);
    return _this;
  }

  _createClass(ImgViewer, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var thatProps = this.props;
      this.container = document.createElement('div');
      this.viewer = new _viewerjs["default"](this.container, Object.assign({
        // 关闭后
        hidden: function hidden() {
          if ('onClose' in thatProps && (0, _isFunction["default"])(thatProps.onClose)) {
            thatProps.onClose();
          }
        },
        view: function view(e) {
          if ('onIndexChange' in thatProps && (0, _isFunction["default"])(thatProps.onIndexChange)) {
            // 图片下标变更
            thatProps.onIndexChange(e.detail.index);
          }
        }
      }, this.options));
    }
  }, {
    key: "componentWillUpdate",
    value: function componentWillUpdate(nextProps) {
      // visible 为true时
      if (nextProps.visible && !(0, _isEqual["default"])(this.props.visible, nextProps.visible)) {
        this.view(nextProps);
      }
    }
  }, {
    key: "view",
    value: function view(props) {
      var container = this.container; // 若容器中已存在子元素，则清空

      if (container.childNodes.length > 0) {
        container.innerHTML = '';
      }

      var photo = props.photo,
          _props$index = props.index,
          index = _props$index === void 0 ? 0 : _props$index;
      var mode = checkMode(photo);
      var newPhoto = (0, _cloneDeep["default"])(photo); // 单张

      if (mode === Mode.VIEWER) {
        index = 0;
        newPhoto = (0, _isObject["default"])(newPhoto) ? newPhoto : newPhoto[0];
        var imgElem = document.createElement('img');
        imgElem.src = newPhoto.id;
        imgElem.alt = newPhoto.name;
        container.append(imgElem);
      } // 多张


      if (mode === Mode.GALLERY) {
        var len = newPhoto.length - 1;
        index = index < 0 ? 0 : index;
        index = index > len ? len : index;
        var ulElem = document.createElement('ul');
        newPhoto.map(function (item) {
          var liElem = document.createElement('li');
          var imgElem = document.createElement('img');
          imgElem.src = item.id;
          imgElem.alt = item.name;
          liElem.append(imgElem);
          ulElem.append(liElem);
        });
        container.append(ulElem);
      }

      this.viewer.update();
      this.viewer.view(index);
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      // 销毁
      this.viewer && this.viewer.destroy();
    }
  }]);

  return ImgViewer;
}(React.Component);

exports["default"] = ImgViewer;
ImgViewer.propTypes = ImgViewerPropTypes;
//# sourceMappingURL=index.js.map
